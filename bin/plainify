#!/bin/bash

show_usage() {
  script_name=$(basename "$0")
  cat >&2 <<EOF
Usage: $script_name [options] <file.mdx>

Options:
  -c            Copy output to clipboard
  -o            Open output in TextEdit
  -w            Write output to a .txt file in the same folder
  -e            Echo to stdout when other flags are used
  -v            Verbose output
  -h            Show this help message
EOF
}

# Prerequisites

if ! command -v pandoc >/dev/null 2>&1; then
  echo "Error: Required application 'pandoc' not found." >&2
  exit 1
fi

# Conversion

convert_mdx_to_txt() {
  input_file="$1"
  sed '/^---/,/^---$/d' "$input_file" | \
  sed '/^```/,/^```$/d' | \
  sed '/^````/,/^````$/d' | \
  sed '/^import /d' | \
  sed '/^\s*:::/d' | \
  sed '/^\s*|.*|/d' | \
  sed '/^\s*[-|]\{3,\}/,/^\s*[-|]\{3,\}/d' | \
  sed -E 's/\[([^\]]+)\]\([^)]+\)/\1/g' | \
  pandoc -f markdown+raw_html -t plain --wrap=none | \
  sed '/^[=-]\{3,\}$/d' | \
  sed -E 's/^#+ +(.*)$/\U\1/'
}

copy_flag=false
open_flag=false
write_flag=false
stdout_flag=false
verbose_flag=false
no_stdout=false

while getopts ":cowevh" opt; do
  case $opt in
    c) copy_flag=true; no_stdout=true ;;
    o) open_flag=true; no_stdout=true ;;
    w) write_flag=true; no_stdout=true ;;
    e) stdout_flag=true ;;
    v) verbose_flag=true ;;
    h) show_usage; exit 0 ;;
    \?) echo "Invalid option: -$OPTARG" >&2; show_usage; exit 1 ;;
  esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
  echo "Error: No input file provided." >&2
  show_usage
  exit 1
fi

input_file="$1"

if [ ! -f "$input_file" ]; then
  echo "Error: '$input_file' is not a valid file." >&2
  exit 1
fi

output_txt="$(convert_mdx_to_txt "$input_file")"

if [ "$stdout_flag" = true ] || [ "$no_stdout" = false ]; then
  echo "$output_txt"
fi

if [ "$copy_flag" = true ]; then
  echo "$output_txt" | pbcopy
fi

if [ "$open_flag" = true ]; then
  echo "$output_txt" | open -f
fi

if [ "$write_flag" = true ]; then
  output_file="${input_file%.*}.txt"
  echo "$output_txt" > "$output_file"
  if [ "$verbose_flag" = true ]; then
    echo "Wrote to: $output_file" >&2
  fi
fi
